LL(1) 现在已用得不多
... need to compute lookahead sets  called  first and follow sets

first  set
First(X)    X can be a terminal ,non-terminal  and  empty(空）
First(X)其实就是定义，X 的推导串中可以做为开头的  终结符（terminals)
 First(X)  集一定是  a set of terminals(可以包括 空  符  e)

for each X-->X1 X2 ..Xn     First(X) contains  First(X1)-{ e(空） }
包不包含  空   要看   X1...Xn   是否都包含空

Follow set 是针对  non-terminal 的

Follow(A) consisting of terminals  ,and possibly  $(结束符）         $ is used to mark the end of the input,  such a string($) is generated by the start symbol of the grammar, so the $ must always be added to the Follow set of the start symbol
Follow(A) 是指在这个语言中（合法的句子中），能够跟在A后面的  terminals

First set  和  Follow set 都是为构造    LL(1) pasing table 做准备的

a grammar is an LL(1) grammar if the assotiated LL(1) parsing talbe has at most one production for each table entry

两条规则填充构造 parsing table     1 :  为产生一个match     M(N,T)   ,a 是 First(A) 中的
                              2: 为消掉一个 symbol            A=》e(空）  且   a 是 Follow(A) 中的

消除左递归   A--> Aa|b
     转化为  A--> bA'      A'-->aA'|e   （e表空）    这样把左递归转化为右递归

the most general bottom-up algorithm is called LR(1) parsing




