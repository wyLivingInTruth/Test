#coding=utf-8
import urllib2
from HTMLParser import HTMLParser

class MyHtmlParser(HTMLParser):
	# class attribute defined here	

	def __init__(self):  # python class的构造方法
		HTMLParser.__init__(self) #必须调用基类的constructor	
		self.urls = []  #所有要去抓取的url
		self.record = False  #实例属性
		self.emojiUnicodes = dict()
		self.emojiSB = dict()
		self.uniSBMap = dict()
		self.isUni = False
		self.isSB = False
		self.numUni = 0
		self.numSB = 0

	def handle_starttag(self, tag, attrs):
		if tag == "table":
			print attrs  # attrs 是 list
			for attr in attrs:  # attr 是 tuple
				print attr
				attrname = attr[0]
				attrvalue = attr[1]
				print attrname
				print attrvalue
				
		if tag != "td":
			self.record = False
			self.isUni = False
			self.isSB = False

	def handle_data(self, data):
		if data == "Unicode" or data == "SB Unicode":
			self.record = True
			if data == "Unicode":
				self.isUni = True
			if data == "SB Unicode":
				self.isSB = True
			return 

		if self.record:    #bool 类型
			print "data :", data
			if data.find("\n") != -1:  #忽略掉不知道哪里来的换行符
				return 
			if self.isUni:
				dataList = data.split(" ")
				print "Uni data: ", data
				self.numUni += 1
				for code in dataList:	
					code = code[2:]
					code = "000" + code
					self.emojiUnicodes[self.numUni] = code
					return

			if self.isSB:
				self.numSB += 1
				self.emojiSB[self.numSB] = data
				return
	
	#生成网页上Unicode, SBCode的dict
	def processMap(self):
		for i in range(1, self.numUni):  #注意这里range()的用法
			self.uniSBMap[self.emojiUnicodes[i]] = self.emojiSB[i]


def processEmoji(url):
	print "wyurl: ", url
	#把目标网页的html先扒到本地
	htmlfile = urllib2.urlopen(url)
	data = htmlfile.read()
	
	#把网页html文本写到./wyfile中
	fp = open("./wyfile", 'w')
	fp.write(data)
	fp.close()
	
	#把emoji.txt中内容读到 emojiMap中
	fp = open("./emoji.txt")
	emojiMap = dict()
	for eachline in fp:
		eachline.strip()
		(name, value) = eachline.split() #string的split()默认以" "作为分隔符
		emojiMap[name] = value
			
	#用自己定义的htmlParser处理htmlfile
	parser = MyHtmlParser()
	parser.feed(data)
	parser.processMap()
	print parser.emojiUnicodes, "\nnumUni=", parser.numUni, parser.emojiSB, "\nnumSB=", parser.numSB, "\n ", parser.uniSBMap
	
	#单独把emoji.txt中不存在的条目 写成一个map
	newMap = dict()
	for key in parser.emojiUnicodes:
		value = parser.emojiUnicodes[key]
		if value not in emojiMap:
			print (value, parser.uniSBMap[value]) #可以这样来print出一个tuple
			newMap[value] = parser.uniSBMap[value]


#所有的要去抓取的urls，还是写死了
baseUrl = "http://punchdrunker.github.com/iOSEmoji/table_html/"
urlList = ["index.html", "flower.html", "bell.html", "vehicle.html", "number.html"]
for url in urlList:
	url = baseUrl + url
	processEmoji(url)
	
